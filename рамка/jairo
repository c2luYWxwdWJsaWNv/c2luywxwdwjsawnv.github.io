<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        body {
            margin: 0;
            padding: 0;
            overflow: hidden;
        }
        #player {
            position: absolute;
            top: 0;
            left: 0;
            bottom: 0;
            width: 100%;
            height: 100%;
            border: 0;
            overflow: hidden;
        }
    </style>
    <meta name="referrer" content="no-referrer">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/gh/sinalpublico/ply@main/assets/css/player-v3.1.min.css">
    <script src="https://content.jwplatform.com/libraries/KB5zFt7A.js"></script>
    <script>
        jwplayer.key = 'XSuP4qMl+9tK17QNb+4+th2Pm9AWgMO/cYH8CI0HGGr7bdjo';
    </script>
</head>
<body>
    <div id="player"></div>
    <script>
        // 
        function getQueryParam(param) {
            const urlParams = new URLSearchParams(window.location.search);
            return urlParams.get(param);
        }

        // 
        async function fetchAndSetupPlayer() {
            const encodedUrl = getQueryParam('id');
            if (!encodedUrl) {
                document.getElementById('player').innerText = 'Parâmetro de URL "id" não encontrado.';
                return;
            }

            // 
            const apiUrl = `=${decodeURIComponent(atob(encodedUrl))}`;
            
            try {
                const response = await fetch(apiUrl);
                if (!response.ok) {
                    throw new Error('Erro na resposta da API: ' + response.status);
                }
                const content = await response.text();

                // 
                const linkPattern = /"file":\s*"([^"]+)"/;
                const match = content.match(linkPattern);

                if (match && match[1]) {
                    // 
                    const playerInstance = jwplayer("player");
                    playerInstance.setup({
                        playlist: [{
                            sources: [{
                                default: false,
                                type: "hls",
                                file: match[1],
                                label: "0"
                            }]
                        }],
                        width: "100%",
                        height: "100%",
                        aspectratio: "16:9",
                        autostart: false,
                        cast: {},
                        sharing: false
                    });
                } else {
                    document.getElementById('player').innerText = 'Link não encontrado.';
                }
            } catch (error) {
                document.getElementById('player').innerText = 'Erro ao carregar o conteúdo: ' + error.message;
            }
        }

        // 
        document.addEventListener('DOMContentLoaded', fetchAndSetupPlayer);
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js"></script>
</body>
</html>
